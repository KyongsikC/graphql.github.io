{"version":3,"file":"component---src-pages-blog-blog-post-post-id-tsx-e4b70ae8099a50102505.js","mappings":"oKAkDA,EA7BkC,SAAC,GAE7B,IADJA,EACI,EADJA,KAEMC,EAASD,EAAKE,QAAQC,KAAK,MACjC,OACE,uBAAKC,UAAU,iBACb,0BAAKJ,EAAKK,OAEV,yBACG,IAAIC,KAAKN,EAAKO,MAAMC,qBADvB,OACiDP,GAGjD,uBAAKG,UAAU,eACZJ,EAAKS,KAAKC,KAAI,SAAAC,GAAG,OAChB,wBAAMC,IAAKD,EAAKP,UAAU,OACxB,gBAAC,EAAAS,KAAD,CAAMC,GAAE,SAAWH,EAAX,KAAoBA,QAKjCX,EAAKe,UACJ,qBAAGX,UAAU,YAAb,qCAA8DH,EAA9D,KAAyED,EAAKe,SAA9E,KAGF,gBAACC,EAAA,EAAD,KAAShB,EAAKiB,OAAOC,mBCjB3B,EAboC,SAAC,GAE/B,IADJlB,EACI,EADJA,KAEA,OACE,+BACE,uBAAKI,UAAU,wBACb,gBAAC,EAAD,CAAUJ,KAAMA,IAChB,gBAACmB,EAAA,EAAD,U,uDCoDR,IAtE8B,WAC5B,IAAMC,GAAOC,EAAAA,EAAAA,gBAAc,cAoBrBZ,EAAOW,EAAKE,YAAYC,MAAMb,KAAI,SAAAa,GAAK,OAAIA,EAAMC,cACjDC,EAAcL,EAAKM,kBAAkBC,MAEzBC,GAAgBC,EAAAA,EAAAA,eAA1BC,SAER,OACE,uBAAK1B,UAAU,yBACb,uBAAKA,UAAU,8BACb,uCACA,qBAAG2B,IAAI,OAAOC,KAAK,sBAAsBC,KAAK,iBAA9C,QAIF,uBAAK7B,UAAU,+BACb,wCACA,0BACGK,EAAKC,KAAI,SAAAC,GACR,IAAMuB,EAAevB,EAAI,GAAGwB,cAAgBxB,EAAIyB,UAAU,GACpDN,EAAW,SAASnB,EAAZ,IACd,OACE,sBAAIC,IAAKD,GACNmB,IAAaF,EACZM,EAEA,gBAAC,EAAArB,KAAD,CAAMC,GAAIgB,GAAWI,SAOjC,uBAAK9B,UAAU,iCACb,0CACA,0BACGqB,EAAYf,KAAI,SAAAV,GAAI,OACnB,sBAAIY,IAAKZ,EAAKqC,QACXrC,EAAKsC,WAAaV,EACjB5B,EAAKK,MAEL,gBAAC,EAAAQ,KAAD,CAAMC,GAAId,EAAKsC,UAAYtC,EAAKK,gB,8DClChD,UAbsC,SAAC,GAEjC,IAEEL,EAFF,EADJoB,KAGkBmB,SAElB,OACE,gBAAC,IAAD,CAAQlC,MAAUL,EAAKK,MAAV,aAA6BmC,YAAa,IACrD,gBAAC,IAAD,CAAYxC,KAAMA","sources":["webpack:///./src/components/BlogPost/index.tsx","webpack:///./src/components/BlogLayout/index.tsx","webpack:///./src/components/BlogSidebar/index.tsx","webpack:///./src/pages/blog/{BlogPost.postId}.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Marked from \"../Marked\"\n\nexport const fragments = graphql`\n  fragment BlogPost_post on BlogPost {\n    title\n    date\n    authors\n    tags\n    guestBio\n    remark {\n      rawMarkdownBody\n    }\n  }\n`;\n\ninterface Props {\n  post: GatsbyTypes.BlogPost_postFragment,\n}\n\nconst BlogPost: React.FC<Props> = ({\n  post,\n}) => {\n  const byline = post.authors.join(', ')\n  return (\n    <div className=\"inner-content\">\n      <h1>{post.title}</h1>\n\n      <p>\n        {new Date(post.date).toLocaleDateString()} by {byline}\n      </p>\n\n      <div className=\"tag-wrapper\">\n        {post.tags.map(tag => (\n          <span key={tag} className=\"tag\">\n            <Link to={`/tags/${tag}/`}>{tag}</Link>\n          </span>\n        ))}\n      </div>\n\n      {post.guestBio && (\n        <p className=\"guestBio\">{`This guest article contributed by ${byline}, ${post.guestBio}.`}</p>\n      )}\n\n      <Marked>{post.remark.rawMarkdownBody}</Marked>\n    </div>\n  )\n}\n\nexport default BlogPost\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport BlogSidebar from \"../BlogSidebar\"\nimport BlogPost from \"../BlogPost\"\n\nexport const fragments = graphql`\n  fragment BlogLayout_post on BlogPost {\n    ...BlogPost_post\n  }\n`;\n\ninterface Props {\n  post: GatsbyTypes.BlogLayout_postFragment,\n}\n\nconst BlogLayout: React.FC<Props> = ({\n  post,\n}) => {\n  return (\n    <section>\n      <div className=\"documentationContent\">\n        <BlogPost post={post} />\n        <BlogSidebar />\n      </div>\n    </section>\n  )\n}\n\nexport default BlogLayout\n","import React from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport { useLocation } from \"@reach/router\"\n\nconst BlogSidebar: React.FC = () => {\n  const data = useStaticQuery<GatsbyTypes.AllTagsStaticQuery>(graphql`\n    query AllTagsStatic {\n      allBlogPost {\n        group(field: tags) {\n          fieldValue\n        }\n      }\n      allRecentBlogPost: allBlogPost(\n        limit: 30,\n        sort: { fields: [date], order: DESC }\n      ) {\n        nodes {\n          title\n          postId\n          postPath: gatsbyPath(filePath: \"/blog/{BlogPost.postId}\")\n        }\n      }\n    }\n  `)\n\n  const tags = data.allBlogPost.group.map(group => group.fieldValue!)\n  const recentPosts = data.allRecentBlogPost.nodes\n\n  const { pathname: currentPath } = useLocation();\n\n  return (\n    <div className=\"nav-docs blog-sidebar\">\n      <div className=\"nav-docs-section subscribe\">\n        <h3>Subscribe</h3>\n        <a rel=\"home\" type=\"application/rss+xml\" href=\"/blog/rss.xml\">\n          RSS\n        </a>\n      </div>\n      <div className=\"nav-docs-section categories\">\n        <h3>Categories</h3>\n        <ul>\n          {tags.map(tag => {\n            const formattedTag = tag[0].toUpperCase() + tag.substring(1)\n            const pathname = `/tags/${tag}/`;\n            return (\n              <li key={tag}>\n                {pathname === currentPath ? (\n                  formattedTag\n                ) : (\n                  <Link to={pathname}>{formattedTag}</Link>\n                )}\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n      <div className=\"nav-docs-section recent-posts\">\n        <h3>Recent Posts</h3>\n        <ul>\n          {recentPosts.map(post => (\n            <li key={post.postId}>\n              {post.postPath === currentPath ? (\n                post.title\n              ) : (\n                <Link to={post.postPath!}>{post.title}</Link>\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default BlogSidebar\n","import * as React from \"react\"\nimport type { PageProps } from \"gatsby\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../../components/Layout\"\nimport BlogLayout from \"../../components/BlogLayout\"\n\nexport const query = graphql`\n  query BlogPostPage($id: String!) {\n    blogPost(id: { eq: $id }) {\n      title\n      ...BlogLayout_post\n    }\n  }\n`\n\ntype Props = PageProps<GatsbyTypes.BlogPostPageQuery, GatsbyTypes.SitePageContext>\n\nconst BlogPostPage: React.FC<Props> = ({\n  data\n}) => {\n  // Always exist since it is collected by Gatsby filesystem route API\n  const post = data.blogPost!\n\n  return (\n    <Layout title={`${post.title} | GraphQL`} pageContext={{}}>\n      <BlogLayout post={post} />\n    </Layout>\n  )\n}\n\nexport default BlogPostPage\n"],"names":["post","byline","authors","join","className","title","Date","date","toLocaleDateString","tags","map","tag","key","Link","to","guestBio","Marked","remark","rawMarkdownBody","BlogSidebar","data","useStaticQuery","allBlogPost","group","fieldValue","recentPosts","allRecentBlogPost","nodes","currentPath","useLocation","pathname","rel","type","href","formattedTag","toUpperCase","substring","postId","postPath","blogPost","pageContext"],"sourceRoot":""}