{
    "componentChunkName": "component---src-templates-doc-tsx",
    "path": "/graphql-js/utilities/",
    "result": {"data":{"doc":{"frontmatter":{"title":"graphql/utilities","heroText":null,"date":null,"permalink":"/graphql-js/utilities/","byline":null,"guestBio":null,"sublinks":"astFromValue,buildASTSchema,buildClientSchema,buildSchema,introspectionQuery,isValidJSValue,isValidLiteralValue,printIntrospectionSchema,printSchema,typeFromAST,TypeInfo","layout":"docs","tags":null},"id":"fa055e3a-e2f6-573b-b853-aeb3d2523b43","rawMarkdownBody":"\nThe `graphql/utilities` module contains common useful computations to use with\nthe GraphQL language and type objects. You can import either from the `graphql/utilities` module, or from the root `graphql` module. For example:\n\n```js\nimport { introspectionQuery } from 'graphql'; // ES6\nvar { introspectionQuery } = require('graphql'); // CommonJS\n```\n\n## Overview\n\n*Introspection*\n\n<ul class=\"apiIndex\">\n  <li>\n    <a href=\"#introspectionquery\">\n      <pre>var introspectionQuery</pre>\n      A GraphQL introspection query containing enough information to reproduce a type system.\n    </a>\n  </li>\n  <li>\n    <a href=\"#buildclientschema\">\n      <pre>function buildClientSchema</pre>\n      Produces a client schema given the result of querying a schema with `introspectionQuery`.\n    </a>\n  </li>\n</ul>\n\n*Schema Language*\n\n<ul class=\"apiIndex\">\n  <li>\n    <a href=\"#buildschema\">\n      <pre>function buildSchema</pre>\n      Builds a Schema object from GraphQL schema language.\n    </a>\n  </li>\n  <li>\n    <a href=\"#printschema\">\n      <pre>function printSchema</pre>\n      Prints the schema in a standard format.\n    </a>\n  </li>\n  <li>\n    <a href=\"#printintrospectionschema\">\n      <pre>function printIntrospectionSchema</pre>\n      Prints the introspection features of the schema in a standard format.\n    </a>\n  </li>\n  <li>\n    <a href=\"#buildastschema\">\n      <pre>function buildASTSchema</pre>\n      Builds a schema from a parsed AST Schema.\n    </a>\n  </li>\n  <li>\n    <a href=\"#typefromast\">\n      <pre>function typeFromAST</pre>\n      Looks up a type referenced in an AST in the GraphQLSchema.\n    </a>\n  </li>\n  <li>\n    <a href=\"#astfromvalue\">\n      <pre>function astFromValue</pre>\n      Produces a GraphQL Input Value AST given a JavaScript value.\n    </a>\n  </li>\n</ul>\n\n*Visitors*\n\n<ul class=\"apiIndex\">\n  <li>\n    <a href=\"#typeinfo\">\n      <pre>class TypeInfo</pre>\n      Tracks type and field definitions during a visitor AST traversal..\n    </a>\n  </li>\n</ul>\n\n*Value Validation*\n\n<ul class=\"apiIndex\">\n  <li>\n    <a href=\"#isvalidjsvalue\">\n      <pre>function isValidJSValue</pre>\n      Determines if a JavaScript value is valid for a GraphQL type.\n    </a>\n  </li>\n  <li>\n    <a href=\"#isvalidliteralvalue\">\n      <pre>function isValidLiteralValue</pre>\n      Determines if a literal value from an AST is valid for a GraphQL type.\n    </a>\n  </li>\n</ul>\n\n## Introspection\n\n### introspectionQuery\n\n```js\nvar introspectionQuery: string\n```\n\nA GraphQL query that queries a server's introspection system for enough\ninformation to reproduce that server's type system.\n\n### buildClientSchema\n\n```js\nfunction buildClientSchema(\n  introspection: IntrospectionQuery\n): GraphQLSchema\n```\n\nBuild a GraphQLSchema for use by client tools.\n\nGiven the result of a client running the introspection query, creates and\nreturns a GraphQLSchema instance which can be then used with all GraphQL.js\ntools, but cannot be used to execute a query, as introspection does not\nrepresent the \"resolver\", \"parse\" or \"serialize\" functions or any other\nserver-internal mechanisms.\n\n## Schema Representation\n\n### buildSchema\n\n```js\nfunction buildSchema(source: string | Source): GraphQLSchema {\n```\n\nCreates a GraphQLSchema object from GraphQL schema language. The schema will use default resolvers. For more detail on the GraphQL schema language, see the [schema language docs](/learn/schema/) or this [schema language cheat sheet](https://wehavefaces.net/graphql-shorthand-notation-cheatsheet-17cd715861b6#.9oztv0a7n).\n\n### printSchema\n\n```js\nfunction printSchema(schema: GraphQLSchema): string {\n```\n\nPrints the provided schema in the Schema Language format.\n\n### printIntrospectionSchema\n\n```js\nfunction printIntrospectionSchema(schema: GraphQLSchema): string {\n```\n\nPrints the built-in introspection schema in the Schema Language format.\n\n### buildASTSchema\n\n```js\nfunction buildASTSchema(\n  ast: SchemaDocument,\n  queryTypeName: string,\n  mutationTypeName: ?string\n): GraphQLSchema\n```\n\nThis takes the ast of a schema document produced by `parseSchemaIntoAST` in\n`graphql/language/schema` and constructs a GraphQLSchema instance which can be\nthen used with all GraphQL.js tools, but cannot be used to execute a query, as\nintrospection does not represent the \"resolver\", \"parse\" or \"serialize\"\nfunctions or any other server-internal mechanisms.\n\n### typeFromAST\n\n```js\nfunction typeFromAST(\n  schema: GraphQLSchema,\n  inputTypeAST: Type\n): ?GraphQLType\n```\n\nGiven the name of a Type as it appears in a GraphQL AST and a Schema, return the\ncorresponding GraphQLType from that schema.\n\n### astFromValue\n\n```js\nfunction astFromValue(\n  value: any,\n  type: GraphQLInputType\n): ?Value\n```\nProduces a GraphQL Input Value AST given a JavaScript value.\n\nOptionally, a GraphQL type may be provided, which will be used to\ndisambiguate between value primitives.\n\n## Visitors\n\n### TypeInfo\n\n```js\nclass TypeInfo {\n  constructor(schema: GraphQLSchema)\n  getType(): ?GraphQLOutputType {\n  getParentType(): ?GraphQLCompositeType {\n  getInputType(): ?GraphQLInputType {\n  getFieldDef(): ?GraphQLFieldDefinition {\n  getDirective(): ?GraphQLDirective {\n  getArgument(): ?GraphQLArgument {\n}\n```\n\nTypeInfo is a utility class which, given a GraphQL schema, can keep track\nof the current field and type definitions at any point in a GraphQL document\nAST during a recursive descent by calling `enter(node)` and `leave(node)`.\n\n## Value Validation\n\n### isValidJSValue\n\n```js\nfunction isValidJSValue(value: any, type: GraphQLInputType): string[]\n```\n\nGiven a JavaScript value and a GraphQL type, determine if the value will be\naccepted for that type. This is primarily useful for validating the\nruntime values of query variables.\n\n### isValidLiteralValue\n\n```js\nfunction isValidLiteralValue(\n  type: GraphQLInputType,\n  valueAST: Value\n): string[]\n```\n\nUtility for validators which determines if a value literal AST is valid given\nan input type.\n\nNote that this only validates literal values, variables are assumed to\nprovide values of the correct type.\n"},"nextDoc":{"frontmatter":{"title":"graphql/validation","permalink":"/graphql-js/validation/"}}},"pageContext":{"permalink":"/graphql-js/utilities/","nextPermalink":"/graphql-js/validation/","sideBarData":[{"name":"GraphQL.js Tutorial","links":[{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/Tutorial-GettingStarted.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"Getting Started With GraphQL.js","permalink":"/graphql-js/","next":"/graphql-js/running-an-express-graphql-server/","category":"GraphQL.js Tutorial","sublinks":null,"sidebarTitle":"Getting Started","date":null,"tags":null},"id":"5438d58b-982e-5844-b28e-cb66d8c4e993"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/Tutorial-ExpressGraphQL.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"Running an Express GraphQL Server","permalink":"/graphql-js/running-an-express-graphql-server/","next":"/graphql-js/graphql-clients/","category":"GraphQL.js Tutorial","sublinks":null,"sidebarTitle":"Running Express + GraphQL","date":null,"tags":null},"id":"ed62cf84-8dcb-5a92-b5f9-4328c2bf4cac"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/Tutorial-GraphQLClients.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"GraphQL Clients","permalink":"/graphql-js/graphql-clients/","next":"/graphql-js/basic-types/","category":"GraphQL.js Tutorial","sublinks":null,"sidebarTitle":null,"date":null,"tags":null},"id":"25adb02f-44bb-563e-b82e-c9ac0b47b140"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/Tutorial-BasicTypes.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"Basic Types","permalink":"/graphql-js/basic-types/","next":"/graphql-js/passing-arguments/","category":"GraphQL.js Tutorial","sublinks":null,"sidebarTitle":null,"date":null,"tags":null},"id":"067d30a9-2895-584b-82d4-2f461f333b6a"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/Tutorial-PassingArguments.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"Passing Arguments","permalink":"/graphql-js/passing-arguments/","next":"/graphql-js/object-types/","category":"GraphQL.js Tutorial","sublinks":null,"sidebarTitle":null,"date":null,"tags":null},"id":"bc1b699a-83c5-5ae9-8032-4ae2950f897c"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/Tutorial-ObjectTypes.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"Object Types","permalink":"/graphql-js/object-types/","next":"/graphql-js/mutations-and-input-types/","category":"GraphQL.js Tutorial","sublinks":null,"sidebarTitle":null,"date":null,"tags":null},"id":"748468bd-5832-55ea-8585-c2156a85819f"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/Tutorial-Mutations.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"Mutations and Input Types","permalink":"/graphql-js/mutations-and-input-types/","next":"/graphql-js/authentication-and-express-middleware/","category":"GraphQL.js Tutorial","sublinks":null,"sidebarTitle":null,"date":null,"tags":null},"id":"bd407c7c-cfed-5fed-899c-4e581ac840bb"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/Tutorial-Authentication.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"Authentication and Express Middleware","permalink":"/graphql-js/authentication-and-express-middleware/","next":"/graphql-js/constructing-types/","category":"GraphQL.js Tutorial","sublinks":null,"sidebarTitle":"Authentication & Middleware","date":null,"tags":null},"id":"4c0ab815-0aa1-52d6-8fbd-c9490526b321"}]},{"name":"Advanced Guides","links":[{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/Guides-ConstructingTypes.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"Constructing Types","permalink":"/graphql-js/constructing-types/","next":"/graphql-js/express-graphql/","category":"Advanced Guides","sublinks":null,"sidebarTitle":null,"date":null,"tags":null},"id":"e77e08e7-36e7-57cf-a824-2d1422915c37"}]},{"name":"API Reference","links":[{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/APIReference-ExpressGraphQL.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"express-graphql","permalink":"/graphql-js/express-graphql/","next":"/graphql-js/graphql/","category":"API Reference","sublinks":"graphqlHTTP","sidebarTitle":null,"date":null,"tags":null},"id":"e0090c94-f27a-5d28-835c-4648cde911aa"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/APIReference-GraphQL.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"graphql","permalink":"/graphql-js/graphql/","next":"/graphql-js/error/","category":"API Reference","sublinks":"graphql","sidebarTitle":null,"date":null,"tags":null},"id":"58f2f91f-cca8-57fd-8db4-4680736c410e"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/APIReference-Errors.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"graphql/error","permalink":"/graphql-js/error/","next":"/graphql-js/execution/","category":"API Reference","sublinks":"formatError,GraphQLError,locatedError,syntaxError","sidebarTitle":null,"date":null,"tags":null},"id":"9619fb38-c60a-57c5-ad41-a654af6b7ec5"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/APIReference-Execution.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"graphql/execution","permalink":"/graphql-js/execution/","next":"/graphql-js/language/","category":"API Reference","sublinks":"execute","sidebarTitle":null,"date":null,"tags":null},"id":"f17b64f6-62ac-5827-ad1b-f44e29175eb0"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/APIReference-Language.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"graphql/language","permalink":"/graphql-js/language/","next":"/graphql-js/type/","category":"API Reference","sublinks":"BREAK,getLocation,Kind,lex,parse,parseValue,printSource,visit","sidebarTitle":null,"date":null,"tags":null},"id":"415b55e0-0096-5624-b79a-b422b4d7ad07"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/APIReference-TypeSystem.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"graphql/type","permalink":"/graphql-js/type/","next":"/graphql-js/utilities/","category":"API Reference","sublinks":"getNamedType,getNullableType,GraphQLBoolean,GraphQLEnumType,GraphQLFloat,GraphQLID,GraphQLInputObjectType,GraphQLInt,GraphQLInterfaceType,GraphQLList,GraphQLNonNull,GraphQLObjectType,GraphQLScalarType,GraphQLSchema,GraphQLString,GraphQLUnionType,isAbstractType,isCompositeType,isInputType,isLeafType,isOutputType","sidebarTitle":null,"date":null,"tags":null},"id":"f84564ec-97de-5575-82bf-a463dda7aaeb"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/APIReference-Utilities.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"graphql/utilities","permalink":"/graphql-js/utilities/","next":"/graphql-js/validation/","category":"API Reference","sublinks":"astFromValue,buildASTSchema,buildClientSchema,buildSchema,introspectionQuery,isValidJSValue,isValidLiteralValue,printIntrospectionSchema,printSchema,typeFromAST,TypeInfo","sidebarTitle":null,"date":null,"tags":null},"id":"fa055e3a-e2f6-573b-b853-aeb3d2523b43"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/APIReference-Validation.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"graphql/validation","permalink":"/graphql-js/validation/","next":null,"category":"API Reference","sublinks":"specifiedRules,validate","sidebarTitle":null,"date":null,"tags":null},"id":"dd7fe377-a8d5-53b9-bd80-e605981d32f0"}]}],"sourcePath":"src/content/graphql-js/APIReference-Utilities.md"}},
    "staticQueryHashes": ["1581580458","2616045547"]}