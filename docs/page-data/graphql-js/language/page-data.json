{
    "componentChunkName": "component---src-templates-doc-tsx",
    "path": "/graphql-js/language/",
    "result": {"data":{"doc":{"frontmatter":{"title":"graphql/language","heroText":null,"date":null,"permalink":"/graphql-js/language/","byline":null,"guestBio":null,"sublinks":"BREAK,getLocation,Kind,lex,parse,parseValue,printSource,visit","layout":"docs","tags":null},"id":"415b55e0-0096-5624-b79a-b422b4d7ad07","rawMarkdownBody":"\nThe `graphql/language` module is responsible for parsing and operating on the GraphQL language. You can import either from the `graphql/language` module, or from the root `graphql` module. For example:\n\n```js\nimport { Source } from 'graphql'; // ES6\nvar { Source } = require('graphql'); // CommonJS\n```\n\n## Overview\n\n*Source*\n\n<ul class=\"apiIndex\">\n  <li>\n    <a href=\"#source\">\n      <pre>class Source</pre>\n      Represents the input string to the GraphQL server\n    </a>\n  </li>\n  <li>\n    <a href=\"#getlocation\">\n      <pre>function getLocation</pre>\n      Converts a character offset to a row and column in the Source\n    </a>\n  </li>\n</ul>\n\n*Lexer*\n\n<ul class=\"apiIndex\">\n  <li>\n    <a href=\"#lex\">\n      <pre>function lex</pre>\n      Lexes a GraphQL Source according to the GraphQL Grammar\n    </a>\n  </li>\n</ul>\n\n*Parser*\n\n<ul class=\"apiIndex\">\n  <li>\n    <a href=\"#parse\">\n      <pre>function parse</pre>\n      Parses a GraphQL Source according to the GraphQL Grammar\n    </a>\n  </li>\n  <li>\n    <a href=\"#parseValue\">\n      <pre>function parseValue</pre>\n      Parses a value according to the GraphQL Grammar\n    </a>\n  </li>\n  <li>\n    <a href=\"#kind\">\n      <pre>var Kind</pre>\n      Represents the various kinds of parsed AST nodes.\n    </a>\n  </li>\n</ul>\n\n*Visitor*\n\n<ul class=\"apiIndex\">\n  <li>\n    <a href=\"#visit\">\n      <pre>function visit</pre>\n      A general-purpose visitor to traverse a parsed GraphQL AST\n    </a>\n  </li>\n  <li>\n    <a href=\"#break\">\n      <pre>var BREAK</pre>\n      A token to allow breaking out of the visitor.\n    </a>\n  </li>\n</ul>\n\n*Printer*\n\n<ul class=\"apiIndex\">\n  <li>\n    <a href=\"#print\">\n      <pre>function print</pre>\n      Prints an AST in a standard format.\n    </a>\n  </li>\n</ul>\n\n## Source\n\n### Source\n\n```js\nexport class Source {\n  constructor(body: string, name?: string)\n}\n```\n\nA representation of source input to GraphQL. The name is optional,\nbut is mostly useful for clients who store GraphQL documents in\nsource files; for example, if the GraphQL input is in a file Foo.graphql,\nit might be useful for name to be \"Foo.graphql\".\n\n### getLocation\n\n```js\nfunction getLocation(source: Source, position: number): SourceLocation\n\ntype SourceLocation = {\n  line: number;\n  column: number;\n}\n```\n\nTakes a Source and a UTF-8 character offset, and returns the corresponding\nline and column as a SourceLocation.\n\n## Lexer\n\n### lex\n\n```js\nfunction lex(source: Source): Lexer;\n\ntype Lexer = (resetPosition?: number) => Token;\n\nexport type Token = {\n  kind: number;\n  start: number;\n  end: number;\n  value: ?string;\n};\n```\n\nGiven a Source object, this returns a Lexer for that source.\nA Lexer is a function that acts like a generator in that every time\nit is called, it returns the next token in the Source. Assuming the\nsource lexes, the final Token emitted by the lexer will be of kind\nEOF, after which the lexer will repeatedly return EOF tokens whenever\ncalled.\n\nThe argument to the lexer function is optional, and can be used to\nrewind or fast forward the lexer to a new position in the source.\n\n## Parser\n\n### parse\n\n```js\nexport function parse(\n  source: Source | string,\n  options?: ParseOptions\n): Document\n```\n\nGiven a GraphQL source, parses it into a Document.\n\nThrows GraphQLError if a syntax error is encountered.\n\n### parseValue\n\n```js\nexport function parseValue(\n  source: Source | string,\n  options?: ParseOptions\n): Value\n```\n\nGiven a string containing a GraphQL value, parse the AST for that value.\n\nThrows GraphQLError if a syntax error is encountered.\n\nThis is useful within tools that operate upon GraphQL Values directly and\nin isolation of complete GraphQL documents.\n\n### Kind\n\nAn enum that describes the different kinds of AST nodes.\n\n## Visitor\n\n### visit\n\n```js\nfunction visit(root, visitor, keyMap)\n```\n\nvisit() will walk through an AST using a depth first traversal, calling\nthe visitor's enter function at each node in the traversal, and calling the\nleave function after visiting that node and all of its child nodes.\n\nBy returning different values from the enter and leave functions, the\nbehavior of the visitor can be altered, including skipping over a sub-tree of\nthe AST (by returning false), editing the AST by returning a value or null\nto remove the value, or to stop the whole traversal by returning BREAK.\n\nWhen using visit() to edit an AST, the original AST will not be modified, and\na new version of the AST with the changes applied will be returned from the\nvisit function.\n\n```js\nvar editedAST = visit(ast, {\n  enter(node, key, parent, path, ancestors) {\n    // @return\n    //   undefined: no action\n    //   false: skip visiting this node\n    //   visitor.BREAK: stop visiting altogether\n    //   null: delete this node\n    //   any value: replace this node with the returned value\n  },\n  leave(node, key, parent, path, ancestors) {\n    // @return\n    //   undefined: no action\n    //   false: no action\n    //   visitor.BREAK: stop visiting altogether\n    //   null: delete this node\n    //   any value: replace this node with the returned value\n  }\n});\n```\n\nAlternatively to providing enter() and leave() functions, a visitor can\ninstead provide functions named the same as the kinds of AST nodes, or\nenter/leave visitors at a named key, leading to four permutations of\nvisitor API:\n\n1) Named visitors triggered when entering a node a specific kind.\n\n```js\nvisit(ast, {\n  Kind(node) {\n    // enter the \"Kind\" node\n  }\n})\n```\n\n2) Named visitors that trigger upon entering and leaving a node of\n   a specific kind.\n\n```js\nvisit(ast, {\n  Kind: {\n    enter(node) {\n      // enter the \"Kind\" node\n    }\n    leave(node) {\n      // leave the \"Kind\" node\n    }\n  }\n})\n```\n\n3) Generic visitors that trigger upon entering and leaving any node.\n\n```js\nvisit(ast, {\n  enter(node) {\n    // enter any node\n  },\n  leave(node) {\n    // leave any node\n  }\n})\n```\n\n4) Parallel visitors for entering and leaving nodes of a specific kind.\n\n```js\nvisit(ast, {\n  enter: {\n    Kind(node) {\n      // enter the \"Kind\" node\n    }\n  },\n  leave: {\n    Kind(node) {\n      // leave the \"Kind\" node\n    }\n  }\n})\n```\n\n### BREAK\n\nThe sentinel `BREAK` value described in the documentation of `visitor`.\n\n## Printer\n\n### print\n\n```js\nfunction print(ast): string\n```\n\nConverts an AST into a string, using one set of reasonable\nformatting rules.\n"},"nextDoc":{"frontmatter":{"title":"graphql/type","permalink":"/graphql-js/type/"}}},"pageContext":{"permalink":"/graphql-js/language/","nextPermalink":"/graphql-js/type/","sideBarData":[{"name":"GraphQL.js Tutorial","links":[{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/Tutorial-GettingStarted.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"Getting Started With GraphQL.js","permalink":"/graphql-js/","next":"/graphql-js/running-an-express-graphql-server/","category":"GraphQL.js Tutorial","sublinks":null,"sidebarTitle":"Getting Started","date":null,"tags":null},"id":"5438d58b-982e-5844-b28e-cb66d8c4e993"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/Tutorial-ExpressGraphQL.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"Running an Express GraphQL Server","permalink":"/graphql-js/running-an-express-graphql-server/","next":"/graphql-js/graphql-clients/","category":"GraphQL.js Tutorial","sublinks":null,"sidebarTitle":"Running Express + GraphQL","date":null,"tags":null},"id":"ed62cf84-8dcb-5a92-b5f9-4328c2bf4cac"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/Tutorial-GraphQLClients.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"GraphQL Clients","permalink":"/graphql-js/graphql-clients/","next":"/graphql-js/basic-types/","category":"GraphQL.js Tutorial","sublinks":null,"sidebarTitle":null,"date":null,"tags":null},"id":"25adb02f-44bb-563e-b82e-c9ac0b47b140"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/Tutorial-BasicTypes.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"Basic Types","permalink":"/graphql-js/basic-types/","next":"/graphql-js/passing-arguments/","category":"GraphQL.js Tutorial","sublinks":null,"sidebarTitle":null,"date":null,"tags":null},"id":"067d30a9-2895-584b-82d4-2f461f333b6a"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/Tutorial-PassingArguments.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"Passing Arguments","permalink":"/graphql-js/passing-arguments/","next":"/graphql-js/object-types/","category":"GraphQL.js Tutorial","sublinks":null,"sidebarTitle":null,"date":null,"tags":null},"id":"bc1b699a-83c5-5ae9-8032-4ae2950f897c"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/Tutorial-ObjectTypes.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"Object Types","permalink":"/graphql-js/object-types/","next":"/graphql-js/mutations-and-input-types/","category":"GraphQL.js Tutorial","sublinks":null,"sidebarTitle":null,"date":null,"tags":null},"id":"748468bd-5832-55ea-8585-c2156a85819f"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/Tutorial-Mutations.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"Mutations and Input Types","permalink":"/graphql-js/mutations-and-input-types/","next":"/graphql-js/authentication-and-express-middleware/","category":"GraphQL.js Tutorial","sublinks":null,"sidebarTitle":null,"date":null,"tags":null},"id":"bd407c7c-cfed-5fed-899c-4e581ac840bb"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/Tutorial-Authentication.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"Authentication and Express Middleware","permalink":"/graphql-js/authentication-and-express-middleware/","next":"/graphql-js/constructing-types/","category":"GraphQL.js Tutorial","sublinks":null,"sidebarTitle":"Authentication & Middleware","date":null,"tags":null},"id":"4c0ab815-0aa1-52d6-8fbd-c9490526b321"}]},{"name":"Advanced Guides","links":[{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/Guides-ConstructingTypes.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"Constructing Types","permalink":"/graphql-js/constructing-types/","next":"/graphql-js/express-graphql/","category":"Advanced Guides","sublinks":null,"sidebarTitle":null,"date":null,"tags":null},"id":"e77e08e7-36e7-57cf-a824-2d1422915c37"}]},{"name":"API Reference","links":[{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/APIReference-ExpressGraphQL.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"express-graphql","permalink":"/graphql-js/express-graphql/","next":"/graphql-js/graphql/","category":"API Reference","sublinks":"graphqlHTTP","sidebarTitle":null,"date":null,"tags":null},"id":"e0090c94-f27a-5d28-835c-4648cde911aa"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/APIReference-GraphQL.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"graphql","permalink":"/graphql-js/graphql/","next":"/graphql-js/error/","category":"API Reference","sublinks":"graphql","sidebarTitle":null,"date":null,"tags":null},"id":"58f2f91f-cca8-57fd-8db4-4680736c410e"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/APIReference-Errors.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"graphql/error","permalink":"/graphql-js/error/","next":"/graphql-js/execution/","category":"API Reference","sublinks":"formatError,GraphQLError,locatedError,syntaxError","sidebarTitle":null,"date":null,"tags":null},"id":"9619fb38-c60a-57c5-ad41-a654af6b7ec5"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/APIReference-Execution.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"graphql/execution","permalink":"/graphql-js/execution/","next":"/graphql-js/language/","category":"API Reference","sublinks":"execute","sidebarTitle":null,"date":null,"tags":null},"id":"f17b64f6-62ac-5827-ad1b-f44e29175eb0"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/APIReference-Language.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"graphql/language","permalink":"/graphql-js/language/","next":"/graphql-js/type/","category":"API Reference","sublinks":"BREAK,getLocation,Kind,lex,parse,parseValue,printSource,visit","sidebarTitle":null,"date":null,"tags":null},"id":"415b55e0-0096-5624-b79a-b422b4d7ad07"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/APIReference-TypeSystem.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"graphql/type","permalink":"/graphql-js/type/","next":"/graphql-js/utilities/","category":"API Reference","sublinks":"getNamedType,getNullableType,GraphQLBoolean,GraphQLEnumType,GraphQLFloat,GraphQLID,GraphQLInputObjectType,GraphQLInt,GraphQLInterfaceType,GraphQLList,GraphQLNonNull,GraphQLObjectType,GraphQLScalarType,GraphQLSchema,GraphQLString,GraphQLUnionType,isAbstractType,isCompositeType,isInputType,isLeafType,isOutputType","sidebarTitle":null,"date":null,"tags":null},"id":"f84564ec-97de-5575-82bf-a463dda7aaeb"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/APIReference-Utilities.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"graphql/utilities","permalink":"/graphql-js/utilities/","next":"/graphql-js/validation/","category":"API Reference","sublinks":"astFromValue,buildASTSchema,buildClientSchema,buildSchema,introspectionQuery,isValidJSValue,isValidLiteralValue,printIntrospectionSchema,printSchema,typeFromAST,TypeInfo","sidebarTitle":null,"date":null,"tags":null},"id":"fa055e3a-e2f6-573b-b853-aeb3d2523b43"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/APIReference-Validation.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"graphql/validation","permalink":"/graphql-js/validation/","next":null,"category":"API Reference","sublinks":"specifiedRules,validate","sidebarTitle":null,"date":null,"tags":null},"id":"dd7fe377-a8d5-53b9-bd80-e605981d32f0"}]}],"sourcePath":"src/content/graphql-js/APIReference-Language.md"}},
    "staticQueryHashes": ["1581580458","2616045547"]}