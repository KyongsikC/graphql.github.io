{
    "componentChunkName": "component---src-templates-doc-tsx",
    "path": "/graphql-js/graphql-clients/",
    "result": {"data":{"doc":{"frontmatter":{"title":"GraphQL Clients","heroText":null,"date":null,"permalink":"/graphql-js/graphql-clients/","byline":null,"guestBio":null,"sublinks":null,"layout":"docs","tags":null},"id":"25adb02f-44bb-563e-b82e-c9ac0b47b140","rawMarkdownBody":"\nSince a GraphQL API has more underlying structure than a REST API, there are more powerful clients like [Relay](https://facebook.github.io/relay/) which can automatically handle batching, caching, and other features. But you don't need a complex client to call a GraphQL server. With `express-graphql`, you can just send an HTTP POST request to the endpoint you mounted your GraphQL server on, passing the GraphQL query as the `query` field in a JSON payload.\n\nFor example, let's say we mounted a GraphQL server on http://localhost:4000/graphql as in the example code for [running an Express GraphQL server](/graphql-js/running-an-express-graphql-server/), and we want to send the GraphQL query `{ hello }`. We can do this from the command line with `curl`. If you paste this into a terminal:\n\n```bash\ncurl -X POST \\\n-H \"Content-Type: application/json\" \\\n-d '{\"query\": \"{ hello }\"}' \\\nhttp://localhost:4000/graphql\n```\n\nYou should see the output returned as JSON:\n\n```bash\n{\"data\":{\"hello\":\"Hello world!\"}}\n```\n\nIf you prefer to use a graphical user interface to send a test query, you can use clients such as [GraphiQL](https://github.com/graphql/graphiql) and [Insomnia](https://github.com/getinsomnia/insomnia).\n\nIt's also simple to send GraphQL from the browser. Open up http://localhost:4000/graphql, open a developer console, and paste in:\n\n```javascript\nfetch('/graphql', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n  },\n  body: JSON.stringify({query: \"{ hello }\"})\n})\n  .then(r => r.json())\n  .then(data => console.log('data returned:', data));\n```\n\nYou should see the data returned, logged in the console:\n\n```\ndata returned: Object { hello: \"Hello world!\" }\n```\n\nIn this example, the query was just a hardcoded string. As your application becomes more complex, and you add GraphQL endpoints that take arguments as described in [Passing Arguments](/graphql-js/passing-arguments/), you will want to construct GraphQL queries using variables in client code. You can do this by including a keyword prefixed with a dollar sign in the query, and passing an extra `variables` field on the payload.\n\nFor example, let's say you're running the example server from [Passing Arguments](/graphql-js/passing-arguments/) that has a schema of\n\n```javascript\ntype Query {\n  rollDice(numDice: Int!, numSides: Int): [Int]\n}\n```\n\nYou could access this from JavaScript with the code:\n\n```javascript\nvar dice = 3;\nvar sides = 6;\nvar query = `query RollDice($dice: Int!, $sides: Int) {\n  rollDice(numDice: $dice, numSides: $sides)\n}`;\n\nfetch('/graphql', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n  },\n  body: JSON.stringify({\n    query,\n    variables: { dice, sides },\n  })\n})\n  .then(r => r.json())\n  .then(data => console.log('data returned:', data));\n```\n\nUsing this syntax for variables is a good idea because it automatically prevents bugs due to escaping, and it makes it easier to monitor your server.\n\nIn general, it will take a bit more time to set up a GraphQL client like Relay, but it's worth it to get more features as your application grows. You might want to start out just using HTTP requests as the underlying transport layer, and switching to a more complex client as your application gets more complex.\n\nAt this point you can write a client and server in GraphQL for an API that receives a single string. To do more, you will want to [learn how to use the other basic data types](/graphql-js/basic-types/).\n"},"nextDoc":{"frontmatter":{"title":"Basic Types","permalink":"/graphql-js/basic-types/"}}},"pageContext":{"permalink":"/graphql-js/graphql-clients/","nextPermalink":"/graphql-js/basic-types/","sideBarData":[{"name":"GraphQL.js Tutorial","links":[{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/Tutorial-GettingStarted.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"Getting Started With GraphQL.js","permalink":"/graphql-js/","next":"/graphql-js/running-an-express-graphql-server/","category":"GraphQL.js Tutorial","sublinks":null,"sidebarTitle":"Getting Started","date":null,"tags":null},"id":"5438d58b-982e-5844-b28e-cb66d8c4e993"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/Tutorial-ExpressGraphQL.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"Running an Express GraphQL Server","permalink":"/graphql-js/running-an-express-graphql-server/","next":"/graphql-js/graphql-clients/","category":"GraphQL.js Tutorial","sublinks":null,"sidebarTitle":"Running Express + GraphQL","date":null,"tags":null},"id":"ed62cf84-8dcb-5a92-b5f9-4328c2bf4cac"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/Tutorial-GraphQLClients.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"GraphQL Clients","permalink":"/graphql-js/graphql-clients/","next":"/graphql-js/basic-types/","category":"GraphQL.js Tutorial","sublinks":null,"sidebarTitle":null,"date":null,"tags":null},"id":"25adb02f-44bb-563e-b82e-c9ac0b47b140"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/Tutorial-BasicTypes.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"Basic Types","permalink":"/graphql-js/basic-types/","next":"/graphql-js/passing-arguments/","category":"GraphQL.js Tutorial","sublinks":null,"sidebarTitle":null,"date":null,"tags":null},"id":"067d30a9-2895-584b-82d4-2f461f333b6a"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/Tutorial-PassingArguments.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"Passing Arguments","permalink":"/graphql-js/passing-arguments/","next":"/graphql-js/object-types/","category":"GraphQL.js Tutorial","sublinks":null,"sidebarTitle":null,"date":null,"tags":null},"id":"bc1b699a-83c5-5ae9-8032-4ae2950f897c"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/Tutorial-ObjectTypes.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"Object Types","permalink":"/graphql-js/object-types/","next":"/graphql-js/mutations-and-input-types/","category":"GraphQL.js Tutorial","sublinks":null,"sidebarTitle":null,"date":null,"tags":null},"id":"748468bd-5832-55ea-8585-c2156a85819f"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/Tutorial-Mutations.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"Mutations and Input Types","permalink":"/graphql-js/mutations-and-input-types/","next":"/graphql-js/authentication-and-express-middleware/","category":"GraphQL.js Tutorial","sublinks":null,"sidebarTitle":null,"date":null,"tags":null},"id":"bd407c7c-cfed-5fed-899c-4e581ac840bb"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/Tutorial-Authentication.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"Authentication and Express Middleware","permalink":"/graphql-js/authentication-and-express-middleware/","next":"/graphql-js/constructing-types/","category":"GraphQL.js Tutorial","sublinks":null,"sidebarTitle":"Authentication & Middleware","date":null,"tags":null},"id":"4c0ab815-0aa1-52d6-8fbd-c9490526b321"}]},{"name":"Advanced Guides","links":[{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/Guides-ConstructingTypes.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"Constructing Types","permalink":"/graphql-js/constructing-types/","next":"/graphql-js/express-graphql/","category":"Advanced Guides","sublinks":null,"sidebarTitle":null,"date":null,"tags":null},"id":"e77e08e7-36e7-57cf-a824-2d1422915c37"}]},{"name":"API Reference","links":[{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/APIReference-ExpressGraphQL.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"express-graphql","permalink":"/graphql-js/express-graphql/","next":"/graphql-js/graphql/","category":"API Reference","sublinks":"graphqlHTTP","sidebarTitle":null,"date":null,"tags":null},"id":"e0090c94-f27a-5d28-835c-4648cde911aa"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/APIReference-GraphQL.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"graphql","permalink":"/graphql-js/graphql/","next":"/graphql-js/error/","category":"API Reference","sublinks":"graphql","sidebarTitle":null,"date":null,"tags":null},"id":"58f2f91f-cca8-57fd-8db4-4680736c410e"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/APIReference-Errors.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"graphql/error","permalink":"/graphql-js/error/","next":"/graphql-js/execution/","category":"API Reference","sublinks":"formatError,GraphQLError,locatedError,syntaxError","sidebarTitle":null,"date":null,"tags":null},"id":"9619fb38-c60a-57c5-ad41-a654af6b7ec5"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/APIReference-Execution.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"graphql/execution","permalink":"/graphql-js/execution/","next":"/graphql-js/language/","category":"API Reference","sublinks":"execute","sidebarTitle":null,"date":null,"tags":null},"id":"f17b64f6-62ac-5827-ad1b-f44e29175eb0"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/APIReference-Language.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"graphql/language","permalink":"/graphql-js/language/","next":"/graphql-js/type/","category":"API Reference","sublinks":"BREAK,getLocation,Kind,lex,parse,parseValue,printSource,visit","sidebarTitle":null,"date":null,"tags":null},"id":"415b55e0-0096-5624-b79a-b422b4d7ad07"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/APIReference-TypeSystem.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"graphql/type","permalink":"/graphql-js/type/","next":"/graphql-js/utilities/","category":"API Reference","sublinks":"getNamedType,getNullableType,GraphQLBoolean,GraphQLEnumType,GraphQLFloat,GraphQLID,GraphQLInputObjectType,GraphQLInt,GraphQLInterfaceType,GraphQLList,GraphQLNonNull,GraphQLObjectType,GraphQLScalarType,GraphQLSchema,GraphQLString,GraphQLUnionType,isAbstractType,isCompositeType,isInputType,isLeafType,isOutputType","sidebarTitle":null,"date":null,"tags":null},"id":"f84564ec-97de-5575-82bf-a463dda7aaeb"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/APIReference-Utilities.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"graphql/utilities","permalink":"/graphql-js/utilities/","next":"/graphql-js/validation/","category":"API Reference","sublinks":"astFromValue,buildASTSchema,buildClientSchema,buildSchema,introspectionQuery,isValidJSValue,isValidLiteralValue,printIntrospectionSchema,printSchema,typeFromAST,TypeInfo","sidebarTitle":null,"date":null,"tags":null},"id":"fa055e3a-e2f6-573b-b853-aeb3d2523b43"},{"fileAbsolutePath":"/Users/ks.choi/graphql.github.io/src/content/graphql-js/APIReference-Validation.md","parent":{"relativeDirectory":"graphql-js","sourceInstanceName":"content"},"frontmatter":{"title":"graphql/validation","permalink":"/graphql-js/validation/","next":null,"category":"API Reference","sublinks":"specifiedRules,validate","sidebarTitle":null,"date":null,"tags":null},"id":"dd7fe377-a8d5-53b9-bd80-e605981d32f0"}]}],"sourcePath":"src/content/graphql-js/Tutorial-GraphQLClients.md"}},
    "staticQueryHashes": ["1581580458","2616045547"]}