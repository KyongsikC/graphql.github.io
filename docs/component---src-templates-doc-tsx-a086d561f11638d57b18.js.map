{"version":3,"file":"component---src-templates-doc-tsx-a086d561f11638d57b18.js","mappings":"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","sources":["webpack:///./node_modules/gatsby-plugin-anchor-links/components/AnchorLink.js","webpack:///./node_modules/gatsby-plugin-anchor-links/index.js","webpack:///./src/components/BlogPost/index.tsx","webpack:///./src/components/BlogLayout/index.tsx","webpack:///./src/components/BlogSidebar/index.tsx","webpack:///./src/components/FAQSection/index.tsx","webpack:///./src/components/DocsSidebar/index.tsx","webpack:///./src/components/DocsLayout/index.tsx","webpack:///./src/components/FoundationLayout/index.tsx","webpack:///./src/components/FAQLayout/index.tsx","webpack:///./src/templates/doc.tsx","webpack:///./src/components/CodeLayout/index.tsx"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnchorLink = AnchorLink;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _gatsby = require(\"gatsby\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nAnchorLink.propTypes = {\n  to: _propTypes[\"default\"].string.isRequired,\n  title: _propTypes[\"default\"].string,\n  className: _propTypes[\"default\"].string,\n  stripHash: _propTypes[\"default\"].bool,\n  gatsbyLinkProps: _propTypes[\"default\"].object,\n  onAnchorLinkClick: _propTypes[\"default\"].func,\n  children: _propTypes[\"default\"].node\n};\n\nfunction AnchorLink(_ref) {\n  var to = _ref.to,\n      title = _ref.title,\n      children = _ref.children,\n      className = _ref.className,\n      _ref$stripHash = _ref.stripHash,\n      stripHash = _ref$stripHash === void 0 ? false : _ref$stripHash,\n      _ref$gatsbyLinkProps = _ref.gatsbyLinkProps,\n      gatsbyLinkProps = _ref$gatsbyLinkProps === void 0 ? {} : _ref$gatsbyLinkProps,\n      onAnchorLinkClick = _ref.onAnchorLinkClick;\n  var onClickHandler = stripHash ? _utils.handleStrippedLinkClick : _utils.handleLinkClick;\n\n  var linkProps = _objectSpread(_objectSpread({}, gatsbyLinkProps), {}, {\n    /**\n     * Spread optional gatsbyLinkProps object in fist, so our specific props will override\n     */\n    to: stripHash ? (0, _utils.stripHashedLocation)(to) : to,\n    onClick: function onClick(e) {\n      return onClickHandler(to, e, onAnchorLinkClick);\n    }\n  });\n  /**\n   * Optional props\n   */\n\n\n  if (title) linkProps.title = title;\n  if (className) linkProps.className = className;\n  return /*#__PURE__*/_react[\"default\"].createElement(_gatsby.Link, linkProps, children ? children : title);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"AnchorLink\", {\n  enumerable: true,\n  get: function get() {\n    return _AnchorLink.AnchorLink;\n  }\n});\n\nvar _AnchorLink = require(\"./components/AnchorLink\");","import * as React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Marked from \"../Marked\"\n\nexport const fragments = graphql`\n  fragment BlogPost_post on BlogPost {\n    title\n    date\n    authors\n    tags\n    guestBio\n    remark {\n      rawMarkdownBody\n    }\n  }\n`;\n\ninterface Props {\n  post: GatsbyTypes.BlogPost_postFragment,\n}\n\nconst BlogPost: React.FC<Props> = ({\n  post,\n}) => {\n  const byline = post.authors.join(', ')\n  return (\n    <div className=\"inner-content\">\n      <h1>{post.title}</h1>\n\n      <p>\n        {new Date(post.date).toLocaleDateString()} by {byline}\n      </p>\n\n      <div className=\"tag-wrapper\">\n        {post.tags.map(tag => (\n          <span key={tag} className=\"tag\">\n            <Link to={`/tags/${tag}/`}>{tag}</Link>\n          </span>\n        ))}\n      </div>\n\n      {post.guestBio && (\n        <p className=\"guestBio\">{`This guest article contributed by ${byline}, ${post.guestBio}.`}</p>\n      )}\n\n      <Marked>{post.remark.rawMarkdownBody}</Marked>\n    </div>\n  )\n}\n\nexport default BlogPost\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport BlogSidebar from \"../BlogSidebar\"\nimport BlogPost from \"../BlogPost\"\n\nexport const fragments = graphql`\n  fragment BlogLayout_post on BlogPost {\n    ...BlogPost_post\n  }\n`;\n\ninterface Props {\n  post: GatsbyTypes.BlogLayout_postFragment,\n}\n\nconst BlogLayout: React.FC<Props> = ({\n  post,\n}) => {\n  return (\n    <section>\n      <div className=\"documentationContent\">\n        <BlogPost post={post} />\n        <BlogSidebar />\n      </div>\n    </section>\n  )\n}\n\nexport default BlogLayout\n","import React from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport { useLocation } from \"@reach/router\"\n\nconst BlogSidebar: React.FC = () => {\n  const data = useStaticQuery<GatsbyTypes.AllTagsStaticQuery>(graphql`\n    query AllTagsStatic {\n      allBlogPost {\n        group(field: tags) {\n          fieldValue\n        }\n      }\n      allRecentBlogPost: allBlogPost(\n        limit: 30,\n        sort: { fields: [date], order: DESC }\n      ) {\n        nodes {\n          title\n          postId\n          postPath: gatsbyPath(filePath: \"/blog/{BlogPost.postId}\")\n        }\n      }\n    }\n  `)\n\n  const tags = data.allBlogPost.group.map(group => group.fieldValue!)\n  const recentPosts = data.allRecentBlogPost.nodes\n\n  const { pathname: currentPath } = useLocation();\n\n  return (\n    <div className=\"nav-docs blog-sidebar\">\n      <div className=\"nav-docs-section subscribe\">\n        <h3>Subscribe</h3>\n        <a rel=\"home\" type=\"application/rss+xml\" href=\"/blog/rss.xml\">\n          RSS\n        </a>\n      </div>\n      <div className=\"nav-docs-section categories\">\n        <h3>Categories</h3>\n        <ul>\n          {tags.map(tag => {\n            const formattedTag = tag[0].toUpperCase() + tag.substring(1)\n            const pathname = `/tags/${tag}/`;\n            return (\n              <li key={tag}>\n                {pathname === currentPath ? (\n                  formattedTag\n                ) : (\n                  <Link to={pathname}>{formattedTag}</Link>\n                )}\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n      <div className=\"nav-docs-section recent-posts\">\n        <h3>Recent Posts</h3>\n        <ul>\n          {recentPosts.map(post => (\n            <li key={post.postId}>\n              {post.postPath === currentPath ? (\n                post.title\n              ) : (\n                <Link to={post.postPath!}>{post.title}</Link>\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default BlogSidebar\n","import React from \"react\"\nimport Marked from \"../Marked\"\n\ninterface Props {\n  title: string\n  rawMarkdownBody: string\n  pageContext: any\n}\n\nconst FAQSection = ({\n  title,\n  rawMarkdownBody,\n  pageContext\n}: Props) => (\n  <section className=\"inner-faq-content\">\n    <h2>{title}</h2>\n    <Marked pageContext={pageContext}>{rawMarkdownBody}</Marked>\n  </section>\n)\n\nexport default FAQSection\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { toSlug } from \"../../utils/slug\"\nimport { AnchorLink } from \"gatsby-plugin-anchor-links\"\n\nconst SidebarForCategory = ({ category }: any) => {\n  const listItems = category.links.map((page: any, i: number) => {\n    return (\n      <li key={i}>\n        <Link\n          style={{ marginLeft: page.indent ? 20 : 0 }}\n          className=\"active\"\n          to={page.frontmatter.permalink}\n        >\n          {page.frontmatter.sidebarTitle || page.frontmatter.title}\n        </Link>\n        {page.frontmatter.sublinks && (\n          <ul>\n            {page.frontmatter.sublinks.split(\",\").map((sublink: any, i: number) => (\n              <li key={i}>\n                <AnchorLink\n                  title={sublink}\n                  to={page.frontmatter.permalink + \"#\" + toSlug(sublink)}\n                >\n                  {sublink}\n                </AnchorLink>\n              </li>\n            ))}\n          </ul>\n        )}\n      </li>\n    )\n  })\n\n  return (\n    <div>\n      <h3>{category.name}</h3>\n      <ul>{listItems}</ul>\n    </div>\n  )\n}\n\nconst SideBar = ({ sideBarData }: any) => {\n  return (\n    <div className=\"nav-docs\">\n      {sideBarData.map((category: any) => (\n        <SidebarForCategory category={category} key={category.name} />\n      ))}\n    </div>\n  )\n}\n\nexport default SideBar\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport DocsSidebar from \"../DocsSidebar\"\nimport Marked from '../Marked'\n\ninterface Props {\n  title: string\n  nextDoc: any\n  permalink: string\n  sideBarData: any\n  rawMarkdownBody: string\n  pageContext: any\n}\n\nconst index = ({ title, nextDoc, sideBarData, rawMarkdownBody, pageContext }: Props) => {\n  return (\n    <section>\n      <div className=\"documentationContent\">\n        <div className=\"inner-content\">\n          <h1>{title}</h1>\n          <Marked pageContext={pageContext}>{rawMarkdownBody}</Marked>\n          {nextDoc?.frontmatter?.permalink && (\n            <Link className=\"read-next\" to={nextDoc.frontmatter.permalink}>\n              <span className=\"read-next-continue\">\n                Continue Reading &rarr;\n              </span>\n              <span className=\"read-next-title\">\n                {nextDoc.frontmatter.title}\n              </span>\n            </Link>\n          )}\n        </div>\n        <DocsSidebar sideBarData={sideBarData} />\n      </div>\n    </section>\n  )\n}\n\nexport default index\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport DocsSidebar from \"../DocsSidebar\"\nimport Marked from '../Marked'\n\ninterface Props {\n  title: string\n  heroText: string\n  nextDoc: any\n  permalink: string\n  sideBarData: any\n  rawMarkdownBody: string\n  pageContext: any\n}\n\nconst Index = ({ title, heroText, nextDoc, sideBarData, rawMarkdownBody, pageContext }: Props) => {\n  return (\n    <section>\n      <div className=\"foundation\">\n        <div className=\"foundation-hero\">\n          <div className=\"foundation-hero-inner-content\">\n              <img src=\"/img/graphql_foundation-logo-white.svg\" alt=\"GraphQL Foundation logo\" />\n              <div>{heroText}</div>\n          </div>\n        </div>\n        <div className=\"documentationContent\">\n          <div className=\"inner-content\">\n            <h1>{title}</h1>\n            <Marked pageContext={pageContext}>{rawMarkdownBody}</Marked>\n            {nextDoc?.frontmatter?.permalink && (\n              <Link className=\"read-next\" to={nextDoc.frontmatter.permalink}>\n                <span className=\"read-next-continue\">\n                  Continue Reading &rarr;\n                </span>\n                <span className=\"read-next-title\">\n                  {nextDoc.frontmatter.title}\n                </span>\n              </Link>\n            )}\n          </div>\n          <DocsSidebar sideBarData={sideBarData} />\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Index\n","import React from \"react\"\nimport FAQSection from \"../FAQSection\"\n\ninterface Props {\n  title: string\n  rawMarkdownBody: string\n  pageContext: any\n}\n\nconst index = ({\n  title,\n  rawMarkdownBody,\n  pageContext\n}: Props) => {\n  return (\n    <section>\n      <div className=\"documentationContent\">\n        <FAQSection\n          title={title}\n          rawMarkdownBody={rawMarkdownBody}\n          pageContext={pageContext}\n        />\n      </div>\n    </section>\n  )\n}\n\nexport default index","import React from \"react\"\nimport type { PageProps } from \"gatsby\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport DocsLayout from \"../components/DocsLayout\"\nimport FoundationLayout from \"../components/FoundationLayout\"\nimport BlogLayout from \"../components/BlogLayout\"\nimport CodeLayout from \"../components/CodeLayout\"\nimport FAQLayout from \"../components/FAQLayout\"\n\nconst layoutMap: Record<string, React.ComponentType<any>> = {\n  docs: DocsLayout,\n  foundation: FoundationLayout,\n  blog: BlogLayout,\n  code: CodeLayout,\n  faq: FAQLayout,\n}\n\nconst Blog = ({ data, pageContext }: PageProps<GatsbyTypes.DocTemplateQuery, GatsbyTypes.SitePageContext>) => {\n  const { doc, nextDoc } = data\n  const { frontmatter, rawMarkdownBody } = doc || {}\n  const {\n    title,\n    date,\n    heroText,\n    permalink,\n    byline,\n    guestBio,\n    layout,\n    tags,\n  } = frontmatter || {}\n\n  const InnerLayout = layoutMap[layout!]\n  return (\n    <Layout title={`${title} | GraphQL`} pageContext={pageContext}>\n      <InnerLayout\n        title={title}\n        date={date}\n        heroText={heroText}\n        permalink={permalink}\n        byline={byline}\n        guestBio={guestBio}\n        rawMarkdownBody={rawMarkdownBody}\n        nextDoc={nextDoc}\n        sideBarData={pageContext.sideBarData}\n        pageContext={pageContext}\n        tags={tags}\n      />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query DocTemplate($permalink: String!, $nextPermalink: String) {\n    doc: markdownRemark(frontmatter: { permalink: { eq: $permalink } }) {\n      frontmatter {\n        title\n        heroText\n        date\n        permalink\n        byline\n        guestBio\n        sublinks\n        layout\n        tags\n      }\n      id\n      rawMarkdownBody\n    }\n    nextDoc: markdownRemark(\n      frontmatter: { permalink: { eq: $nextPermalink } }\n    ) {\n      frontmatter {\n        title\n        permalink\n      }\n    }\n  }\n`\n\nexport default Blog\n","import React from 'react'\nimport Marked from \"../Marked\";\n\nexport default ({ title, rawMarkdownBody, pageContext }: any) => (\n  <section>\n    <div className=\"documentationContent\">\n      <div className=\"inner-content\">\n        <h1>{title}</h1>\n        <Marked pageContext={pageContext}>{rawMarkdownBody}</Marked>\n      </div>\n    </div>\n  </section>\n)"],"names":["Object","defineProperty","exports","value","AnchorLink","_react","_interopRequireDefault","require","_gatsby","_propTypes","_utils","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","_ref","to","title","children","className","_ref$stripHash","stripHash","_ref$gatsbyLinkProps","gatsbyLinkProps","onAnchorLinkClick","onClickHandler","handleStrippedLinkClick","handleLinkClick","linkProps","stripHashedLocation","onClick","e","createElement","Link","propTypes","string","isRequired","bool","func","node","get","_AnchorLink","post","byline","authors","join","Date","date","toLocaleDateString","tags","map","tag","guestBio","Marked","remark","rawMarkdownBody","BlogSidebar","data","useStaticQuery","allBlogPost","group","fieldValue","recentPosts","allRecentBlogPost","nodes","currentPath","useLocation","pathname","rel","type","href","formattedTag","toUpperCase","substring","postId","postPath","pageContext","SidebarForCategory","category","listItems","links","page","style","marginLeft","indent","frontmatter","permalink","sidebarTitle","sublinks","split","sublink","toSlug","name","sideBarData","nextDoc","DocsSidebar","heroText","src","alt","FAQSection","layoutMap","docs","DocsLayout","foundation","FoundationLayout","blog","BlogLayout","code","faq","FAQLayout","doc","layout","InnerLayout","Layout"],"sourceRoot":""}